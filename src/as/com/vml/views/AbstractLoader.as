package com.vml.views{		import flash.display.Loader;	import flash.display.LoaderInfo;	import flash.display.MovieClip;	import flash.display.Sprite;	import flash.display.StageAlign;	import flash.display.StageScaleMode;	import flash.events.Event;	import flash.events.ProgressEvent;	import flash.net.URLRequest;	import flash.system.ApplicationDomain;	import flash.system.LoaderContext;	import flash.system.SecurityDomain;
	public class AbstractLoader extends Sprite	{				protected var _loader:Loader;		protected var _request:URLRequest;		protected var _app:AbstractApplication;		protected var _swfpath:String;				public static var base:String;				public function AbstractLoader(  )		{			super();			stage.align = StageAlign.TOP_LEFT;			stage.scaleMode = StageScaleMode.NO_SCALE;		}				protected function loadSWF():void		{			var context:LoaderContext = new LoaderContext( true, ApplicationDomain.currentDomain );				context.securityDomain =  SecurityDomain.currentDomain;						_loader = new Loader( );			_loader.contentLoaderInfo.addEventListener(ProgressEvent.PROGRESS, handleProgress );			_loader.contentLoaderInfo.addEventListener( Event.COMPLETE, handleAppLoaded );						_request = new URLRequest( );			_request.url = _swfpath;			_loader.load( _request, context );		}				protected function handleProgress( event:ProgressEvent ):void		{					}				protected function handleAppLoaded( event:Event ):void		{						_loader.contentLoaderInfo.removeEventListener(ProgressEvent.PROGRESS, handleProgress );			_loader.contentLoaderInfo.removeEventListener( Event.COMPLETE, handleAppLoaded );						var info:LoaderInfo = event.target as LoaderInfo;			var datapath:String = ( root.loaderInfo.parameters.datapath != null ) ? root.loaderInfo.parameters.datapath : "../xml/config.xml";						_app = info.content as AbstractApplication;						if( !_app )			{				throw new Error("Loaded content type is not type of AbstractApplication")				}			else			{				app.addEventListener( Event.INIT , handleAppInit );				addApp();				app.init( this.loaderInfo  );			}							}				protected function addApp():void		{			addChild( _app );					}				public function get app():MovieClip		{			return _app;		}				protected function handleAppInit( event:Event ):void		{			_app.removeEventListener(Event.INIT , handleAppInit );			_app.initView();		}	}}